#!/usr/bin/env python
# -*- coding: utf-8 -*-

import dynamic_reconfigure.parameter_generator_catkin as param

gen = param.ParameterGenerator()

frame_rate_desc = "The Acquisition Frame Rate parameter sets the 'absolute' value of the acquisition frame rate. The 'absolute' value is a float value that sets the acquisition frame rate in frames per second."
gen.add("frame_rate", param.double_t, 0, frame_rate_desc,
    default=30, min=0, max=100)

exposure_time_desc = "This float value sets the camera's exposure time in microseconds."
gen.add("exposure_time", param.double_t, 0, exposure_time_desc,
    default=30000, min=0, max=1000000)

acquisition_mode_desc = "This enumeration sets the image acquisition mode."
acquisition_mode = gen.enum([
        gen.const("SingleFrame", param.str_t, "SingleFrame", "Sets the acquisition mode to single frame."),
        gen.const("Continuous", param.str_t, "Continuous", "Sets the acquisition mode to continuous."),
    ], acquisition_mode_desc)
gen.add("acquisition_mode", param.str_t, 0, acquisition_mode_desc, default="SingleFrame", edit_method=acquisition_mode)

exposure_auto_desc = "Control the exposure auto function."
exposure_auto = gen.enum([
        gen.const("Exposure_Off", param.str_t, "Off", "Disables the exposure auto function."),
        gen.const("Exposure_Once", param.str_t, "Once", "Sets the exposure auto function mode of operation to - once."),
        gen.const("Exposure_Continuous", param.str_t, "Continuous", "Sets the exposure auto function mode of operation to - continuous."),
    ], exposure_auto_desc)
gen.add("exposure_auto", param.str_t, 0, exposure_auto_desc, default="Off", edit_method=exposure_auto)

gain_auto_desc = "Control the Gain Auto function."
gain_auto = gen.enum([
        gen.const("Gain_Off", param.str_t, "Off", "Disables the Gain Auto function."),
        gen.const("Gain_Once", param.str_t, "Once", "Sets the auto function mode of operation to - once."),
        gen.const("Gain_Continuous", param.str_t, "Continuous", "Sets the auto function mode of operation to - continuous."),
    ], gain_auto_desc)
gen.add("gain_auto", param.str_t, 0, gain_auto_desc, default="Off", edit_method=gain_auto)

gain_desc = "This float value sets the camera's gain."
gen.add("gain", param.double_t, 0, gain_desc,
    default=1, min=0, max=100)

trigger_mode_desc = "This enumeration sets the trigger mode for the selected trigger."
trigger_mode = gen.enum([
        gen.const("Trigger_Mode_Off", param.str_t, "Off", "Sets the mode for the selected trigger to - off."),
        gen.const("Trigger_Mode_On", param.str_t, "On", "Sets the mode for the selected trigger to - on."),
    ], trigger_mode_desc)
gen.add("trigger_mode", param.str_t, 0, trigger_mode_desc, default="Off", edit_method=trigger_mode)

line_selector_desc = "This enumeration selects the internally generated camera signal (source signal) for the selected line when the selected line is an output."
line_selector = gen.enum([
        gen.const("Line1", param.str_t, "Line1", "Selects line 1 for configuration."),
        gen.const("Line2", param.str_t, "Line2", "Selects line 2 for configuration."),
        gen.const("Line3", param.str_t, "Line3", "Selects line 3 for configuration."),
        gen.const("Line4", param.str_t, "Line4", "Selects line 4 for configuration."),
    ], trigger_mode_desc)
gen.add("line_selector", param.str_t, 0, line_selector_desc, default="Line1", edit_method=line_selector)

exit(gen.generate("basler_camera", "basler_camera", "Camera"))
